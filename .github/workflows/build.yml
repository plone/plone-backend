name: Build images

on:
  - push


jobs:
  collect-build-info:
    name: Collect build information
    runs-on: ubuntu-latest
    outputs:
      matrix-include: ${{ steps.set-matrix.outputs.matrix-include }}
      environment-to-use: ${{ steps.set-environment.outputs.environment-to-use }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        name: Collect plone and python versions to build
        run: |
          JSON=$(.github/workflows/collect_matrix.py)
          # Output the string representing a JSON array of all versions present
          echo "::set-output name=matrix-include::${JSON//'%'/'%25'}"
          echo Using build matrix:
          echo "${JSON//'%'/'%25'}" | jq

      - id: set-environment
        name: Select the environment to use (null or "DOCKER_HUB")
        run: |
          # If the branch is `main` or `main-test` we should use environment `DOCKER_HUB`
          if [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/main-test" ]]; then
            echo "::set-output name=environment-to-use::\"DOCKER_HUB\""
            echo Running from ${{ github.ref }}: using DOCKER_HUB environment
          else
            echo "::set-output name=environment-to-use::null"
            echo Running from ${{ github.ref }}: using no environment
          fi

  build:
    runs-on: ubuntu-latest
    environment: ${{ fromJson(needs.collect-build-info.outputs.environment-to-use) }}
    needs: collect-build-info
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.collect-build-info.outputs.matrix-include) }}
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - name: Get tag from Makefile
        id: get-tag
        run: |
          TAG="$(.github/workflows/collect-tags.py ${{ matrix.plone-version }})$(.github/workflows/is_latest.py ${{ matrix.plone-version }} ${{ matrix.python-version }})"
          echo Using tag ${TAG}
          echo "::set-output name=tag::${TAG}"
        env:
          PYTHON_VERSION:  ${{ matrix.python-version }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ needs.collect-build-info.outputs.environment-to-use == '"DOCKER_HUB"' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ matrix.plone-version }} in python ${{ matrix.python-version }}
        uses: docker/build-push-action@v2
        with:
          push: ${{ needs.collect-build-info.outputs.environment-to-use == '"DOCKER_HUB"' }}
          context: ./${{ matrix.plone-version }}
          file: ./${{ matrix.plone-version }}/Dockerfile.python${{ matrix.python-version }}
          tags: ${{ steps.get-tag.outputs.tag }}
